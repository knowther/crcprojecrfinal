/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import bean.Paciente;
import bean.Turno;
import java.awt.event.ItemEvent;
import java.beans.Beans;
import java.io.File;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author johnn
 */
public class JFrmCadDeclaracaoPaciente extends javax.swing.JInternalFrame {
    
    
    int turnoPac;
    int tipodeclaracao;
    int verificardata;
    
    /**
     * Creates new form JFrmCadDeclaracaoPaciente
     */
    public JFrmCadDeclaracaoPaciente() {
        
        initComponents();
        botoes();
        
        if (!Beans.isDesignTime()) {
            entityManager.getTransaction().begin(); 
        }
        jDateChooser2.getCalendarButton().setVisible(false);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("ClinicaFprojectPU").createEntityManager();
        pacienteHasTiposdeclaracaoQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT p FROM PacienteHasTiposdeclaracao p");
        pacienteHasTiposdeclaracaoList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(pacienteHasTiposdeclaracaoQuery.getResultList());
        pacienteQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT p FROM Paciente p");
        pacienteList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : pacienteQuery.getResultList();
        tiposdeclaracaoQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT t FROM Tiposdeclaracao t");
        tiposdeclaracaoList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : tiposdeclaracaoQuery.getResultList();
        turnoQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT t FROM Turno t");
        turnoList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(turnoQuery.getResultList());
        jScrollPane1 = new javax.swing.JScrollPane();
        masterTable = new javax.swing.JTable();
        jComboBoxPaciente = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jComboBoxtipoDeclaracao = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jButtonGerardeclaracao = new javax.swing.JButton();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        jButtonCriardeclaracao = new javax.swing.JButton();
        jComboBox2 = new javax.swing.JComboBox<>();
        jTextField1 = new javax.swing.JTextField();

        setClosable(true);

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, pacienteHasTiposdeclaracaoList, masterTable);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idpacienteHasTiposdeclaracao}"));
        columnBinding.setColumnName("Idpaciente Has Tiposdeclaracao");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${paciente}"));
        columnBinding.setColumnName("Paciente");
        columnBinding.setColumnClass(bean.Paciente.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${tiposdeclaracao}"));
        columnBinding.setColumnName("Tiposdeclaracao");
        columnBinding.setColumnClass(bean.Tiposdeclaracao.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${paciente.turno}"));
        columnBinding.setColumnName("turno");
        columnBinding.setColumnClass(bean.Turno.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jScrollPane1.setViewportView(masterTable);

        org.jdesktop.swingbinding.JComboBoxBinding jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, pacienteList, jComboBoxPaciente);
        bindingGroup.addBinding(jComboBoxBinding);
        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.paciente}"), jComboBoxPaciente, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        jComboBoxPaciente.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxPacienteItemStateChanged(evt);
            }
        });
        jComboBoxPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxPacienteActionPerformed(evt);
            }
        });

        jLabel1.setText("Paciente:");

        jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, tiposdeclaracaoList, jComboBoxtipoDeclaracao);
        bindingGroup.addBinding(jComboBoxBinding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.tiposdeclaracao}"), jComboBoxtipoDeclaracao, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        jComboBoxtipoDeclaracao.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxtipoDeclaracaoItemStateChanged(evt);
            }
        });
        jComboBoxtipoDeclaracao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxtipoDeclaracaoActionPerformed(evt);
            }
        });

        jLabel2.setText("Declaração que deseja gerar:");

        jButtonGerardeclaracao.setText("Gerar Declaração");
        jButtonGerardeclaracao.setPreferredSize(new java.awt.Dimension(28, 23));
        jButtonGerardeclaracao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGerardeclaracaoActionPerformed(evt);
            }
        });

        jDateChooser1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jDateChooser1KeyTyped(evt);
            }
        });

        jLabel3.setText("Agora, informe o dia e horário que o procedimento será realizado");

        jDateChooser2.setDateFormatString("HH:mm");

        jLabel4.setText("Primeiro, informe o paciente e que tipo de declaração deseja gerar:");

        jButtonCriardeclaracao.setText("Criar nova declaração");
        jButtonCriardeclaracao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCriardeclaracaoActionPerformed(evt);
            }
        });

        jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, turnoList, jComboBox2);
        bindingGroup.addBinding(jComboBoxBinding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.paciente.turno}"), jComboBox2, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        jComboBox2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox2ItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(52, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jComboBoxPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel1))
                            .addGap(52, 52, 52)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(jComboBoxtipoDeclaracao, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(133, 133, 133)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jDateChooser2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(17, 17, 17)))
                .addGap(52, 52, 52))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(146, 146, 146)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(148, 148, 148)
                        .addComponent(jButtonCriardeclaracao, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(153, 153, 153)
                        .addComponent(jButtonGerardeclaracao, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(26, 26, 26)
                .addComponent(jButtonCriardeclaracao)
                .addGap(18, 18, 18)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxtipoDeclaracao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jButtonGerardeclaracao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(84, Short.MAX_VALUE))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxPacienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxPacienteActionPerformed

    private void jButtonGerardeclaracaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGerardeclaracaoActionPerformed
        
        
        if(tipodeclaracao ==0){
         String documents = new JFileChooser().getFileSystemView().getDefaultDirectory().toString();
             try {
                 JasperReport relatorio = JasperCompileManager.compileReport(documents);
                 JRBeanCollectionDataSource dados = new JRBeanCollectionDataSource(pacienteHasTiposdeclaracaoList, false);
                 Map parametros = new HashMap();
                 parametros.put("DATA_PROCEDIMENTO", jDateChooser1.getDate());
                 parametros.put("HORA_PROCEDIMENTO", jDateChooser2.getDate());
                 JasperPrint print = JasperFillManager.fillReport(relatorio, parametros, dados);
                 JasperViewer view = new JasperViewer(print, false);
                 view.setVisible(true);
                 
             } catch (JRException ex) {
                 Logger.getLogger(JFrmCadDeclaracaoPaciente.class.getName()).log(Level.SEVERE, null, ex);
             }
         
        }
        
        if(tipodeclaracao == 1){
             String caminho = new File("./relatorios/reportADMISSAO.jrxml").getAbsolutePath();
             try {
                 JasperReport relatorio = JasperCompileManager.compileReport(caminho);
                 JRBeanCollectionDataSource dados = new JRBeanCollectionDataSource(pacienteHasTiposdeclaracaoList, false);
                 Map parametros = new HashMap();
                 parametros.put("HORARIO_TURNO", jTextField1.getText());
                 JasperPrint print = JasperFillManager.fillReport(relatorio, parametros, dados);
                 JasperViewer view = new JasperViewer(print, false);
                 view.setVisible(true);
                 
             } catch (JRException ex) {
                 Logger.getLogger(JFrmCadDeclaracaoPaciente.class.getName()).log(Level.SEVERE, null, ex);
             }
        }
        declaracaogerada();
        
    }//GEN-LAST:event_jButtonGerardeclaracaoActionPerformed

    private void jButtonCriardeclaracaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCriardeclaracaoActionPerformed
        
        bean.PacienteHasTiposdeclaracao p = new bean.PacienteHasTiposdeclaracao();
        entityManager.persist(p);
        pacienteHasTiposdeclaracaoList.add(p);
        int row = pacienteHasTiposdeclaracaoList.size() - 1;
        masterTable.setRowSelectionInterval(row, row);
        masterTable.scrollRectToVisible(masterTable.getCellRect(row, 0, true));
        ativarescolha();
        
        
    }//GEN-LAST:event_jButtonCriardeclaracaoActionPerformed

    private void jComboBoxPacienteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxPacienteItemStateChanged
      
         
    }//GEN-LAST:event_jComboBoxPacienteItemStateChanged

    private void jComboBox2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox2ItemStateChanged
            turnoPac = jComboBox2.getSelectedIndex();
             if(turnoPac == 0 ){
             jTextField1.setText("(5:30 as 9:30)");
                 
             }
             if(turnoPac == 1){
                  jTextField1.setText("(9:30 as 13:30)");
             }
             if(turnoPac == 2){
                  jTextField1.setText ("(13:30 as 17:30)");
             }
             if(turnoPac == 3){
                  jTextField1.setText("(17:30 as 21:30)");
             }
              if(turnoPac == 4 ){
                 jTextField1.setText("(5:30 as 9:30)");
             }
             if(turnoPac == 5){
                jTextField1.setText("(9:30 as 13:30)");
             }
             if(turnoPac == 6){
                jTextField1.setText("(13:30 as 17:30)");
             }
             if(turnoPac == 7){
                 jTextField1.setText("(17:30 as 21:30)");
             }
    }//GEN-LAST:event_jComboBox2ItemStateChanged

    private void jComboBoxtipoDeclaracaoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxtipoDeclaracaoItemStateChanged
       
        
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            tipodeclaracao = jComboBoxtipoDeclaracao.getSelectedIndex();
    if(tipodeclaracao == 0){
        precisadeturno();
    }
    
    if(tipodeclaracao == 1){
        nprecisadeturno();
        jDateChooser1.setEnabled(true);
    }
        
        }
        jButtonGerardeclaracao.setEnabled(true);
    }//GEN-LAST:event_jComboBoxtipoDeclaracaoItemStateChanged

    private void jDateChooser1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jDateChooser1KeyTyped
       
    }//GEN-LAST:event_jDateChooser1KeyTyped

    private void jComboBoxtipoDeclaracaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxtipoDeclaracaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxtipoDeclaracaoActionPerformed

    
        private void botoes(){
            jComboBoxPaciente.setEnabled(false);
            jComboBoxtipoDeclaracao.setEnabled(false);
            jDateChooser1.setEnabled(false);
            jDateChooser2.setEnabled(false);
            jComboBox2.setVisible(false);
            jTextField1.setVisible(false);
            jButtonGerardeclaracao.setEnabled(false);
        }
        
        private void ativarescolha(){
            jComboBoxPaciente.setEnabled(true);
             jComboBoxtipoDeclaracao.setEnabled(true);
        }
    
        private void precisadeturno(){
            jDateChooser1.setEnabled(true);
            jDateChooser2.setEnabled(true);
        }
        
        private void nprecisadeturno(){
            jDateChooser1.setEnabled(false);
            jDateChooser2.setEnabled(false);
            jDateChooser1.setDate(null);
            jDateChooser2.setDate(null);
        }
        
        private void declaracaogerada(){
            //pacienteHasTiposdeclaracaoList.clear();
            jComboBoxPaciente.setSelectedItem(null);
            jComboBoxtipoDeclaracao.setSelectedItem(null);
            jButtonGerardeclaracao.setEnabled(false);
            jButtonCriardeclaracao.setEnabled(true);
            jDateChooser1.setDate(null);
            jDateChooser2.setDate(null);
            
        }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.persistence.EntityManager entityManager;
    private javax.swing.JButton jButtonCriardeclaracao;
    private javax.swing.JButton jButtonGerardeclaracao;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBoxPaciente;
    private javax.swing.JComboBox<String> jComboBoxtipoDeclaracao;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTable masterTable;
    private java.util.List<bean.PacienteHasTiposdeclaracao> pacienteHasTiposdeclaracaoList;
    private javax.persistence.Query pacienteHasTiposdeclaracaoQuery;
    private java.util.List<bean.Paciente> pacienteList;
    private javax.persistence.Query pacienteQuery;
    private java.util.List<bean.Tiposdeclaracao> tiposdeclaracaoList;
    private javax.persistence.Query tiposdeclaracaoQuery;
    private java.util.List<bean.Turno> turnoList;
    private javax.persistence.Query turnoQuery;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
